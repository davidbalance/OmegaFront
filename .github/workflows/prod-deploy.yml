name: Docker Image Production
on:
  push:
    branches:
      - main

jobs:
  push_migration_image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ["22.x"]
    env:
      TEST_ENV: ${{ secrets.TEST_ENV }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Create test env file
        run: |
          echo "$TEST_ENV" >> .env

      - name: Build docker image
        run: docker build -f Dockerfile.migrate -t ${{ secrets.DOCKER_IMAGE }}:migrate .
        working-directory: .

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_IMAGE }}:migrate

  build_and_push_docker_image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ["22.x"]
    env:
      TEST_ENV: ${{ secrets.TEST_ENV }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Create test env file
        run: |
          echo "$TEST_ENV" >> .env

      - name: Build docker image
        run: docker build -t ${{ secrets.DOCKER_IMAGE }}:latest .
        working-directory: .

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_IMAGE }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: 
      - push_migration_image
      - build_and_push_docker_image
    strategy:
      fail-fast: false

    steps:
      - name: Check Repository
        uses: actions/checkout@v4

      - name: SSH into server and deploy application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd ${{ secrets.DOCKER_COMPOSE_DIRECTORY }}
            sh ./${{ secrets.DEPLOY_SCRIPT }}.sh